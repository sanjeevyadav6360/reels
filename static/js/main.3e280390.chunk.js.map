{"version":3,"sources":["firebase.js","AuthProvider.jsx","components/videoCard.jsx","components/home.jsx","components/login.jsx","App.js","index.js"],"names":["firebase","initializeApp","config","provider","auth","GoogleAuthProvider","firestore","storage","authContext","createContext","AuthProvider","props","useState","user","setUser","loading","setLoading","useEffect","unsub","onAuthStateChanged","displayName","email","uid","photoURL","Provider","value","children","VideoCard","currUserLiked","playing","setPlaying","commentBoxOpen","setCommentBoxOpen","currUserComment","setCurrUserComment","comments","setComments","useContext","data","likes","includes","f","a","commentsArr","arr","i","length","collection","doc","get","commentDoc","push","className","name","onClick","e","likesArr","filter","el","id","update","map","src","photo","comment","type","onChange","currentTarget","add","docRef","commentId","postDoc","postCommentsArr","pause","play","loop","url","Home","posts","setPosts","onSnapshot","querySnapshot","docArr","docs","to","signOut","videoObj","files","size","alert","split","uploadTask","ref","Date","now","put","on","snapshot","getDownloadURL","then","console","log","Login","signInWithPopup","App","exact","path","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e280390.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport config from \"./config.json\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/storage\";\r\n\r\nfirebase.initializeApp(config);\r\n\r\nlet provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nexport const signInWithGoogle = () => {\r\n  auth.signInWithPopup(provider);\r\n};\r\n\r\nexport default firebase;","import { createContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"./firebase\";\r\n\r\nexport const authContext = createContext();\r\nlet AuthProvider = (props) => {\r\n    let [user, setUser] = useState(null);\r\n    let [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let unsub = auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                let { displayName, email, uid, photoURL } = user;\r\n                setUser({ displayName, email, uid, photoURL });\r\n            } else {\r\n                setUser(null);\r\n            }\r\n            setLoading(false);\r\n        });\r\n        return () => {\r\n            unsub();\r\n        };\r\n\r\n    }, []);\r\n    return (\r\n        <authContext.Provider value={user}>\r\n            {!loading && props.children}\r\n        </authContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthProvider;","import { useContext, useEffect, useState } from \"react\";\r\nimport { authContext } from \"../AuthProvider\";\r\nimport { firestore } from \"../firebase\";\r\n\r\nimport \"./videoCard.css\";\r\n\r\nlet VideoCard = (props) => {\r\n  let [playing, setPlaying] = useState(false);\r\n  let [commentBoxOpen, setCommentBoxOpen] = useState(false);\r\n  let [currUserComment, setCurrUserComment] = useState(\"\");\r\n  let [comments, setComments] = useState([]);\r\n  let user = useContext(authContext);\r\n\r\n  let currUserLiked;\r\n  if (user) {\r\n    currUserLiked = props.data.likes.includes(user.uid);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let f = async () => {\r\n      let commentsArr = props.data.comments;\r\n      let arr = [];\r\n      for (let i = 0; i < commentsArr.length; i++) {\r\n        let commentDoc = await firestore\r\n          .collection(\"comments\")\r\n          .doc(commentsArr[i])\r\n          .get();\r\n\r\n        arr.push(commentDoc.data());\r\n      }\r\n\r\n      setComments(arr);\r\n    };\r\n    f();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"video-card\">\r\n      <p className=\"video-card-username\">{props.data.name}</p>\r\n      <span className=\"video-card-music\">\r\n        <span className=\"material-icons\">music_note</span>\r\n        <marquee>some song</marquee>\r\n      </span>\r\n\r\n      <span\r\n        onClick={(e) => {\r\n          if (commentBoxOpen) {\r\n            setCommentBoxOpen(false);\r\n          } else {\r\n            setCommentBoxOpen(true);\r\n          }\r\n        }}\r\n        className=\"material-icons-outlined video-card-comment\"\r\n      >\r\n        chat\r\n      </span>\r\n\r\n      <span\r\n        className=\"material-icons-outlined video-card-like\"\r\n        onClick={() => {\r\n          let likesArr = props.data.likes;\r\n          if (currUserLiked) {\r\n            likesArr = likesArr.filter((el) => el != user.uid);\r\n          } else {\r\n            likesArr.push(user.uid);\r\n          }\r\n          firestore\r\n            .collection(\"posts\")\r\n            .doc(props.data.id)\r\n            .update({ likes: likesArr });\r\n        }}\r\n      >\r\n        {currUserLiked ? \"favorite\" : \"favorite_border\"}\r\n      </span>\r\n\r\n      {commentBoxOpen ? (\r\n        <div className=\"video-card-comment-box\">\r\n          <div className=\"actual-comments\">\r\n            {comments.map((el) => {\r\n              return (\r\n                <div className=\"post-user-comment\">\r\n                  <img src={el.photo} />\r\n                  <div>\r\n                    <h5>{el.name}</h5>\r\n                    <p>{el.comment}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"comment-form\">\r\n            {/* jobhi mai input tag me likhunga wo meri state me save hota rahega  */}\r\n            <input\r\n              type=\"text\"\r\n              value={currUserComment}\r\n              onChange={(e) => {\r\n                setCurrUserComment(e.currentTarget.value);\r\n              }}\r\n            />\r\n            <button\r\n              onClick={async () => {\r\n                //jo current comment state me hai use comments collection me add kr rha hu\r\n                let docRef = await firestore.collection(\"comments\").add({\r\n                  name: user.displayName,\r\n                  comment: currUserComment,\r\n                  photo: user.photoURL,\r\n                });\r\n\r\n                setCurrUserComment(\"\");\r\n                //to jo abhi comment maine add kra hai uske document ke ref se wo comment ka document nikal lo\r\n                let doc = await docRef.get();\r\n                //us document ki id nikal lo\r\n                let commentId = doc.id;\r\n\r\n                //ye jo video card hai uska post document nikalo\r\n                let postDoc = await firestore\r\n                  .collection(\"posts\")\r\n                  .doc(props.data.id)\r\n                  .get();\r\n                //us document me comment arr hai whapr jo apne apni comment add kra h uski id insert krdo\r\n                let postCommentsArr = postDoc.data().comments;\r\n\r\n                postCommentsArr.push(commentId);\r\n\r\n                // ab ye comments array firestore jakr update krdo\r\n                await firestore.collection(\"posts\").doc(props.data.id).update({\r\n                  comments: postCommentsArr,\r\n                });\r\n              }}\r\n            >\r\n              Post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <video\r\n        onClick={(e) => {\r\n          if (playing) {\r\n            e.currentTarget.pause();\r\n            setPlaying(false);\r\n          } else {\r\n            e.currentTarget.play();\r\n            setPlaying(true);\r\n          }\r\n        }}\r\n        loop\r\n        src={props.data.url}\r\n        className=\"video-card-video\"\r\n      ></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCard;","import { useContext, useEffect, useState } from \"react\";\r\nimport { auth, storage, firestore } from \"../firebase\";\r\n\r\nimport { authContext } from \"../AuthProvider\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport VideoCard from \"./videoCard\";\r\n\r\nimport \"./home.css\";\r\n\r\nlet Home = () => {\r\n  let user = useContext(authContext);\r\n  let [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unsub = firestore.collection(\"posts\").onSnapshot((querySnapshot) => {\r\n      let docArr = querySnapshot.docs;\r\n\r\n      let arr = [];\r\n\r\n      for (let i = 0; i < docArr.length; i++) {\r\n        arr.push({\r\n          id: docArr[i].id,\r\n          ...docArr[i].data(),\r\n        });\r\n      }\r\n\r\n      setPosts(arr);\r\n    });\r\n\r\n    return () => {\r\n      unsub();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {user ? \"\" : <Redirect to=\"/login\" />}\r\n\r\n      <div className=\"video-container\">\r\n        {posts.map((el) => {\r\n          return <VideoCard key={el.id} data={el} />;\r\n        })}\r\n      </div>\r\n\r\n      <button\r\n        className=\"home-logout-btn\"\r\n        onClick={() => {\r\n          auth.signOut();\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n\r\n      <input\r\n        type=\"file\"\r\n        onClick={(e) => {\r\n          e.currentTarget.value = null;\r\n        }}\r\n        onChange={(e) => {\r\n          let videoObj = e.currentTarget.files[0];\r\n          let { name, size, type } = videoObj;\r\n\r\n          size = size / 1000000;\r\n\r\n          if (size > 10) {\r\n            alert(\"file size exceeds 10mb\");\r\n            return;\r\n          }\r\n\r\n          type = type.split(\"/\")[0];\r\n\r\n          if (type !== \"video\") {\r\n            alert(\"Please upload a video file\");\r\n            return;\r\n          }\r\n\r\n          let uploadTask = storage\r\n            .ref(`/posts/${user.uid}/${Date.now() + \"-\" + name}`)\r\n            .put(videoObj);\r\n\r\n          uploadTask.on(\"state_changed\", null, null, () => {\r\n            uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n              console.log(url);\r\n\r\n              firestore\r\n                .collection(\"posts\")\r\n                .add({ name: user.displayName, url, likes: [], comments: [] });\r\n            });\r\n          });\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;","import { useContext, useEffect } from \"react\";\r\nimport { signInWithGoogle, auth } from \"../firebase\";\r\nimport { authContext } from \"../AuthProvider\";\r\nimport { Redirect } from \"react-router-dom\";\r\nlet Login = () => {\r\n  let user = useContext(authContext);\r\n\r\n  return (\r\n    <>\r\n      {user ? <Redirect to=\"/\" /> : \"\"}\r\n      <button\r\n        onClick={() => {\r\n          signInWithGoogle();\r\n        }}\r\n        className=\"btn btn-primary m-4\"\r\n      >\r\n        Login with google\r\n      </button>\r\n\r\n     \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Login from \"./components/login\";\nimport AuthProvider from \"./AuthProvider\";\nfunction App() {\n    return (\n        <>\n            <AuthProvider>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/login\">\n                            <Login />\n                        </Route>\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                    </Switch>\n                </Router>\n            </AuthProvider>\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(\n  <App />,document.getElementById(\"root\")\n);\n"],"sourceRoot":""}